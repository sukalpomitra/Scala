format version: 5
output mode:
1 items
0 -> single
output directories:
1 items
output dir -> D:\IdeaProjects\streams\target\scala-2.11\test-classes
compile options:
1 items
0 -> -deprecation
javac options:
0 items
compiler version:
1 items
0 -> 2.11.7
compile order:
1 items
0 -> Mixed
name hashing:
1 items
0 -> true
products:
14 items
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> D:\IdeaProjects\streams\target\scala-2.11\test-classes\streams\BloxorzSuite$$anonfun$1$$anon$1.class
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> D:\IdeaProjects\streams\target\scala-2.11\test-classes\streams\BloxorzSuite$$anonfun$1.class
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> D:\IdeaProjects\streams\target\scala-2.11\test-classes\streams\BloxorzSuite$$anonfun$2$$anon$2.class
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> D:\IdeaProjects\streams\target\scala-2.11\test-classes\streams\BloxorzSuite$$anonfun$2.class
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> D:\IdeaProjects\streams\target\scala-2.11\test-classes\streams\BloxorzSuite$$anonfun$3$$anon$3.class
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> D:\IdeaProjects\streams\target\scala-2.11\test-classes\streams\BloxorzSuite$$anonfun$3.class
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> D:\IdeaProjects\streams\target\scala-2.11\test-classes\streams\BloxorzSuite$$anonfun$4$$anon$4.class
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> D:\IdeaProjects\streams\target\scala-2.11\test-classes\streams\BloxorzSuite$$anonfun$4.class
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> D:\IdeaProjects\streams\target\scala-2.11\test-classes\streams\BloxorzSuite$Level1$class.class
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> D:\IdeaProjects\streams\target\scala-2.11\test-classes\streams\BloxorzSuite$Level1.class
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> D:\IdeaProjects\streams\target\scala-2.11\test-classes\streams\BloxorzSuite$SolutionChecker$$anonfun$solve$1.class
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> D:\IdeaProjects\streams\target\scala-2.11\test-classes\streams\BloxorzSuite$SolutionChecker$class.class
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> D:\IdeaProjects\streams\target\scala-2.11\test-classes\streams\BloxorzSuite$SolutionChecker.class
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> D:\IdeaProjects\streams\target\scala-2.11\test-classes\streams\BloxorzSuite.class
binary dependencies:
4 items
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> C:\Program Files (x86)\Java\jre1.8.0_71\lib\rt.jar
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> C:\Users\Sukalpo Mitra\.ivy2\cache\junit\junit\jars\junit-4.10.jar
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> C:\Users\Sukalpo Mitra\.ivy2\cache\org.scala-lang\scala-library\jars\scala-library-2.11.7.jar
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> C:\Users\Sukalpo Mitra\.ivy2\cache\org.scalatest\scalatest_2.11\bundles\scalatest_2.11-2.2.4.jar
direct source dependencies:
0 items
direct external dependencies:
0 items
public inherited source dependencies:
0 items
public inherited external dependencies:
0 items
member reference internal dependencies:
0 items
member reference external dependencies:
4 items
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> streams.Bloxorz$
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> streams.GameDef
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> streams.Solver
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> streams.StringParserTerrain
inheritance internal dependencies:
0 items
inheritance external dependencies:
3 items
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> streams.GameDef
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> streams.Solver
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> streams.StringParserTerrain
class names:
14 items
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> streams.BloxorzSuite
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> streams.BloxorzSuite$$anonfun$1
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> streams.BloxorzSuite$$anonfun$1$$anon$1
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> streams.BloxorzSuite$$anonfun$2
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> streams.BloxorzSuite$$anonfun$2$$anon$2
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> streams.BloxorzSuite$$anonfun$3
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> streams.BloxorzSuite$$anonfun$3$$anon$3
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> streams.BloxorzSuite$$anonfun$4
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> streams.BloxorzSuite$$anonfun$4$$anon$4
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> streams.BloxorzSuite$Level1
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> streams.BloxorzSuite$Level1$class
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> streams.BloxorzSuite$SolutionChecker
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> streams.BloxorzSuite$SolutionChecker$$anonfun$solve$1
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> streams.BloxorzSuite$SolutionChecker$class
used names:
67 items
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> $anon
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> $org_scalatest_assert_macro_expr
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> $org_scalatest_assert_macro_left
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> $org_scalatest_assert_macro_right
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> <init>
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> ==
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> Block
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> Bloxorz
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> BloxorzSuite
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> Bool
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> Down
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> FunSuite
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> GameDef
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> JUnitRunner
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> Left
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> Level1
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> List
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> Move
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> Predef
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> Right
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> RunWith
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> SolutionChecker
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> Solver
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> StringParserTerrain
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> Up
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> _1
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> _2
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> apply
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> assert
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> assertionsHelper
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> augmentString
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> binaryMacroBool
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> block
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> down
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> foldLeft
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> goal
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> immutable
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> junit
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> left
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> length
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> lengthSizeMacroBool
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> level
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> ls
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> macroAssert
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> move
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> ne
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> notBool
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> optsolution
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> org
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> package
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> right
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> runner
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> scala
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> scalactic
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> scalatest
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> simpleMacroBool
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> solution
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> solve
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> startBlock
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> startPos
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> streams
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> stripMargin
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> terrain
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> test
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> toLong
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> unary_!
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> up
product stamps:
14 items
D:\IdeaProjects\streams\target\scala-2.11\test-classes\streams\BloxorzSuite$$anonfun$1$$anon$1.class -> lastModified(1472659242457)
D:\IdeaProjects\streams\target\scala-2.11\test-classes\streams\BloxorzSuite$$anonfun$1.class -> lastModified(1472659242430)
D:\IdeaProjects\streams\target\scala-2.11\test-classes\streams\BloxorzSuite$$anonfun$2$$anon$2.class -> lastModified(1472659242478)
D:\IdeaProjects\streams\target\scala-2.11\test-classes\streams\BloxorzSuite$$anonfun$2.class -> lastModified(1472659242460)
D:\IdeaProjects\streams\target\scala-2.11\test-classes\streams\BloxorzSuite$$anonfun$3$$anon$3.class -> lastModified(1472659242503)
D:\IdeaProjects\streams\target\scala-2.11\test-classes\streams\BloxorzSuite$$anonfun$3.class -> lastModified(1472659242482)
D:\IdeaProjects\streams\target\scala-2.11\test-classes\streams\BloxorzSuite$$anonfun$4$$anon$4.class -> lastModified(1472659242530)
D:\IdeaProjects\streams\target\scala-2.11\test-classes\streams\BloxorzSuite$$anonfun$4.class -> lastModified(1472659242511)
D:\IdeaProjects\streams\target\scala-2.11\test-classes\streams\BloxorzSuite$Level1$class.class -> lastModified(1472659242535)
D:\IdeaProjects\streams\target\scala-2.11\test-classes\streams\BloxorzSuite$Level1.class -> lastModified(1472659242532)
D:\IdeaProjects\streams\target\scala-2.11\test-classes\streams\BloxorzSuite$SolutionChecker$$anonfun$solve$1.class -> lastModified(1472659242542)
D:\IdeaProjects\streams\target\scala-2.11\test-classes\streams\BloxorzSuite$SolutionChecker$class.class -> lastModified(1472659242545)
D:\IdeaProjects\streams\target\scala-2.11\test-classes\streams\BloxorzSuite$SolutionChecker.class -> lastModified(1472659242537)
D:\IdeaProjects\streams\target\scala-2.11\test-classes\streams\BloxorzSuite.class -> lastModified(1472659242425)
source stamps:
1 items
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> hash(147b92a9bbdba113bf9531d9de5a70f9f3b8bc8f)
binary stamps:
4 items
C:\Program Files (x86)\Java\jre1.8.0_71\lib\rt.jar -> lastModified(1453451512485)
C:\Users\Sukalpo Mitra\.ivy2\cache\junit\junit\jars\junit-4.10.jar -> lastModified(1317323535000)
C:\Users\Sukalpo Mitra\.ivy2\cache\org.scala-lang\scala-library\jars\scala-library-2.11.7.jar -> lastModified(1438617791000)
C:\Users\Sukalpo Mitra\.ivy2\cache\org.scalatest\scalatest_2.11\bundles\scalatest_2.11-2.2.4.jar -> lastModified(1422515700000)
class names:
4 items
C:\Program Files (x86)\Java\jre1.8.0_71\lib\rt.jar -> java.lang.Object
C:\Users\Sukalpo Mitra\.ivy2\cache\junit\junit\jars\junit-4.10.jar -> org.junit.runner.RunWith
C:\Users\Sukalpo Mitra\.ivy2\cache\org.scala-lang\scala-library\jars\scala-library-2.11.7.jar -> scala.Function1
C:\Users\Sukalpo Mitra\.ivy2\cache\org.scalatest\scalatest_2.11\bundles\scalatest_2.11-2.2.4.jar -> org.scalatest.FunSuite
internal apis:
1 items
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> 

external apis:
4 items
streams.Bloxorz$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHDWGrvYAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAUXNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cPoAh9x0AAt2YWxpZENvbHVtbnNxAH4ADFtRjxZ0AARkb3duc3EAfgAMEWMC33QABm5vdGlmeXNxAH4ADAgaBWl0AAd1bmFwcGx5c3EAfgAMrnJIqXQAB2N1cnJpZWRzcQB+AAx8tPJcdAAFTGV2ZWxzcQB+AAwTP9m8dAABeHNxAH4ADBJFKlh0AAR3YWl0c3EAfgAMs4p91HQAAmIyc3EAfgAMZP7qXnQADmxlZ2FsTmVpZ2hib3Jzc3EAfgAM9PAMGHQADmNvcHkkZGVmYXVsdCQyc3EAfgAM1xqqZ3QADSRhc0luc3RhbmNlT2ZzcQB+AAwykKc+dAACZHlzcQB+AAwo4QXidAAQbmV3TmVpZ2hib3JzT25seXNxAH4ADIQRBCF0AAZMZXZlbDBzcQB+AAyAG1D+dAAMcHJvZHVjdEFyaXR5c3EAfgAM1mk9W3QADnBhdGhzRnJvbVN0YXJ0c3EAfgAMUdQE93QABmVxdWFsc3NxAH4ADIBy1oJ0AAF5c3EAfgAMNkp6THQAAnVwc3EAfgAMl5oyxHQAB0Jsb3hvcnpzcQB+AAygdC3RdAAMYXNJbnN0YW5jZU9mc3EAfgAMeCmWpXQADmV4ZWN1dGlvblN0YXJ0c3EAfgAMHVUz1HQACW5laWdoYm9yc3NxAH4ADP/pa8N0AA12YWxpZFBvc2l0aW9uc3EAfgAMz2LwKHQADHN5bmNocm9uaXplZHNxAH4ADL+qeOp0AARsZWZ0c3EAfgAMnERmM3QADSRpc0luc3RhbmNlT2ZzcQB+AAwdp0x5dAAGdHVwbGVkc3EAfgAMJBjwC3QABGdvYWxzcQB+AAwHxQSxdAACYjFzcQB+AAz7uQTedAAIY2FuRXF1YWxzcQB+AAyx0hTEdAAEbWFpbnNxAH4ADEYG76V0AA90ZXJyYWluRnVuY3Rpb25zcQB+AAxNJ7qTdAANcHJvZHVjdFByZWZpeHNxAH4ADPkx90x0AAZMZXZlbDFzcQB+AAyaoyvudAAJbm90aWZ5QWxsc3EAfgAMXN6Lf3QAC3JlYWRSZXNvbHZlc3EAfgAMx1+aWHQADGlzSW5zdGFuY2VPZnNxAH4ADFPl7GF0AAhzb2x1dGlvbnNxAH4ADBXBSwB0AAY8aW5pdD5zcQB+AAztHRohdAAETW92ZXNxAH4ADCg1pod0AAVhcHBseXNxAH4ADDwOxXt0AAI9PXNxAH4ADDhmroR0AAREb3duc3EAfgAMHAy+8nQABExlZnRzcQB+AAxgLpLqdAAFY2xvbmVzcQB+AAzr1N7bdAAHdGVycmFpbnNxAH4ADN33OKF0AAtwYXRoc1RvR29hbHNxAH4ADCxKRTZ0AARmcm9tc3EAfgAMHyaAXXQACGVuZEJsb2Nrc3EAfgAM6i0X53QAB2lzTGVnYWxzcQB+AAyBn2/xdAAKc3RhcnRCbG9ja3NxAH4ADO9EGwl0AAppc1N0YW5kaW5nc3EAfgAMeCwhOnQAAlVwc3EAfgAMpdbrInQABGNvcHlzcQB+AAxvmqIsdAAEZG9uZXNxAH4ADF4+apB0AAh0b1N0cmluZ3NxAH4ADHYN3fl0AARhcmdzc3EAfgAMHzNTIXQACGZpbmRDaGFyc3EAfgAM6g2Si3QADUluZmluaXRlTGV2ZWxzcQB+AAxEDnc2dAADUG9zc3EAfgAMQU3eAnQAAiE9c3EAfgAMObqzYnQACGdldENsYXNzc3EAfgAMxXqZa3QADmNvcHkkZGVmYXVsdCQxc3EAfgAMWTOgh3QAAmR4c3EAfgAMCEg2O3QAFG5laWdoYm9yc1dpdGhIaXN0b3J5c3EAfgAMJ97EwHQAB1RlcnJhaW5zcQB+AAw82c7vdAACbmVzcQB+AAyGXD5GdAAIc3RhcnRQb3NzcQB+AAwRyD7idAAFQmxvY2tzcQB+AAzP0SITdAAFUmlnaHRzcQB+AAx5IWKMdAACZXFzcQB+AAx2kslvdAAPcHJvZHVjdEl0ZXJhdG9yc3EAfgAMZPkvUXQABXJpZ2h0c3EAfgAMiTQoGHQAC2RlbGF5ZWRJbml0c3EAfgAMNw2KbnQAAiMjc3EAfgAMYD73l3QACGZpbmFsaXplc3EAfgAMW3TbmXQADnByb2R1Y3RFbGVtZW50c3EAfgAMqHj+y3QACGhhc2hDb2Rlc3EAfgAMw9liwHQABWxldmVsc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AuXhyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzxxETIWmc3CQCAAFCAAVmbGFnc3hwAHQAD3N0cmVhbXMuQmxveG9yenVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABk1vZHVsZXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAJ0ABBzY2FsYS5kZXByZWNhdGVkdAAac2NhbGEuZGVwcmVjYXRlZE92ZXJyaWRpbmdzcgATeHNidGkuU2FmZUxhenkkSW1wbFACLpOXl0A/AgADWgAIYml0bWFwJDBMAAJfdHQAEkxqYXZhL2xhbmcvT2JqZWN0O0wABGV2YWx0ABFMc2NhbGEvRnVuY3Rpb24wO3hyABZ4c2J0aS5hcGkuQWJzdHJhY3RMYXp503e1AV+756ACAAB4cABwc3IAIHhzYnRpLlNhZmVMYXp5JCRhbm9uZnVuJHN0cmljdCQxAAAAAAAAAAACAAFMAAd2YWx1ZSQxcQB+ANR4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+ANMBc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+ALlMAAlpbmhlcml0ZWRxAH4AuUwAB3BhcmVudHNxAH4AuXhxAH4A3HNxAH4A0wF1cQB+ALQAAAAAcHNxAH4A0wF1cQB+ALQAAAABc3IADXhzYnRpLmFwaS5EZWZSvp/ifLQ2aQIAAkwACnJldHVyblR5cGV0ABBMeHNidGkvYXBpL1R5cGU7WwAPdmFsdWVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvUGFyYW1ldGVyTGlzdDt4cQB+ALpxAH4Aw3VxAH4AxAAAAAFzcgAUeHNidGkuYXBpLkFubm90YXRpb27eDoGi9lwKsgIAAlsACWFyZ3VtZW50c3QAH1tMeHNidGkvYXBpL0Fubm90YXRpb25Bcmd1bWVudDtMAARiYXNlcQB+AOZ4cHVyAB9bTHhzYnRpLmFwaS5Bbm5vdGF0aW9uQXJndW1lbnQ7UZ2mjzglD3gCAAB4cAAAAAFzcgAceHNidGkuYXBpLkFubm90YXRpb25Bcmd1bWVudNZFsdgDGxd8AgACTAAEbmFtZXEAfgANTAAFdmFsdWVxAH4ADXhwdAAAdAAqKCJtYWluIHNob3VsZCBub3QgYmUgb3ZlcnJpZGRlbiIsIjIuMTEuMCIpc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4A23QAFGRlcHJlY2F0ZWRPdmVycmlkaW5nc3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgDbc3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAACc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AAVzY2FsYXNyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgEAc3EAfgDGAHEAfgBPdXEAfgDJAAAAAHNxAH4A83QABFVuaXRxAH4A+XVyABpbTHhzYnRpLmFwaS5QYXJhbWV0ZXJMaXN0O/XTOh3ys3DuAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5QYXJhbWV0ZXJMaXN01sW8HGRJdOMCAAJaAAppc0ltcGxpY2l0WwAKcGFyYW1ldGVyc3QAHFtMeHNidGkvYXBpL01ldGhvZFBhcmFtZXRlcjt4cAB1cgAcW0x4c2J0aS5hcGkuTWV0aG9kUGFyYW1ldGVyO8+4xV2l3bVtAgAAeHAAAAABc3IAGXhzYnRpLmFwaS5NZXRob2RQYXJhbWV0ZXIfRa4X00mw6gIABFoACmhhc0RlZmF1bHRMAAhtb2RpZmllcnQAHUx4c2J0aS9hcGkvUGFyYW1ldGVyTW9kaWZpZXI7TAAEbmFtZXEAfgANTAADdHBlcQB+AOZ4cAB+cgAbeHNidGkuYXBpLlBhcmFtZXRlck1vZGlmaWVyAAAAAAAAAAASAAB4cQB+AMx0AAVQbGFpbnEAfgCDc3IAF3hzYnRpLmFwaS5QYXJhbWV0ZXJpemVkFmzuaQPJu38CAAJMAAhiYXNlVHlwZXEAfgD0WwANdHlwZUFyZ3VtZW50c3QAEVtMeHNidGkvYXBpL1R5cGU7eHEAfgDbc3EAfgDzdAAFQXJyYXlxAH4A+XVyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAABc3EAfgDzdAAGU3RyaW5nc3EAfgD3c3EAfgD6dXEAfgD9AAAAA3NxAH4A/3QABGphdmFzcQB+AP90AARsYW5ncQB+AQRwc3EAfgDTAXVxAH4BGwAAAARzcQB+APN0AANBcHBxAH4A+XNxAH4A83QAC0RlbGF5ZWRJbml0cQB+APlzcQB+APN0AAZPYmplY3RxAH4BH3NxAH4A83QAA0FueXEAfgD5cHB1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAAAXNyABF4c2J0aS5hcGkuUGFja2FnZX5Zj/auzjlYAgABTAAEbmFtZXEAfgANeHB0AAdzdHJlYW1zc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFW4VSxwXVyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0ADFEOlxJZGVhUHJvamVjdHNcc3RyZWFtc1x0YXJnZXRcc2NhbGEtMi4xMVxjbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUHx4SEOdjxfwMgjh+wN3DmpKdkRg=
streams.GameDef -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHC+4hXfAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAPnNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cFlVlFN0AARkb3duc3EAfgAMvdJppnQABm5vdGlmeXNxAH4ADJcH+gt0AAd1bmFwcGx5c3EAfgAM2YYck3QAB2N1cnJpZWRzcQB+AAyD6c5edAABeHNxAH4ADBPgvq10AAdHYW1lRGVmc3EAfgAM7Df443QABHdhaXRzcQB+AAwKRO0bdAACYjJzcQB+AAwo6ULbdAAObGVnYWxOZWlnaGJvcnNzcQB+AAxNio2WdAAOY29weSRkZWZhdWx0JDJzcQB+AAyEyB9ddAANJGFzSW5zdGFuY2VPZnNxAH4ADJ3VVr90AAJkeXNxAH4ADNUkMQB0AAxwcm9kdWN0QXJpdHlzcQB+AAyODHg1dAAGZXF1YWxzc3EAfgAMWVC9GnQAAXlzcQB+AAxNWe4sdAACdXBzcQB+AAzwYvu0dAAMYXNJbnN0YW5jZU9mc3EAfgAMQKcRLXQACW5laWdoYm9yc3NxAH4ADIbMNrJ0AAxzeW5jaHJvbml6ZWRzcQB+AAyKNMe1dAAEbGVmdHNxAH4ADNPVQ4d0AA0kaXNJbnN0YW5jZU9mc3EAfgAM08k/N3QABnR1cGxlZHNxAH4ADOrNJQZ0AARnb2Fsc3EAfgAMs46yoXQAAmIxc3EAfgAMdshuMHQACGNhbkVxdWFsc3EAfgAMI/EFUHQADXByb2R1Y3RQcmVmaXhzcQB+AAyLhkh8dAAJbm90aWZ5QWxsc3EAfgAMyDn7U3QAC3JlYWRSZXNvbHZlc3EAfgAMhPHN43QADGlzSW5zdGFuY2VPZnNxAH4ADDlZ9Wh0AAY8aW5pdD5zcQB+AAzn/0dpdAAETW92ZXNxAH4ADBrWiP10AAVhcHBseXNxAH4ADKK9Wvt0AAI9PXNxAH4ADAQUrnl0AAREb3duc3EAfgAMO1PkinQABExlZnRzcQB+AAwdgMdIdAAFY2xvbmVzcQB+AAwFamkOdAAHdGVycmFpbnNxAH4ADEOz5UR0AAhlbmRCbG9ja3NxAH4ADC0HUs50AAYkaW5pdCRzcQB+AAwArlCadAAHaXNMZWdhbHNxAH4ADCuz9gt0AApzdGFydEJsb2Nrc3EAfgAMTwgz4HQACmlzU3RhbmRpbmdzcQB+AAy5kB8cdAACVXBzcQB+AAxOtzCHdAAEY29weXNxAH4ADC2x1rV0AAh0b1N0cmluZ3NxAH4ADEAiZh50AANQb3NzcQB+AAwUlQEjdAACIT1zcQB+AAwkFslTdAAIZ2V0Q2xhc3NzcQB+AAzNaSfIdAAOY29weSRkZWZhdWx0JDFzcQB+AAxfnoQbdAACZHhzcQB+AAyieO1OdAAHVGVycmFpbnNxAH4ADIy85Ll0AAJuZXNxAH4ADJUJ0n10AAhzdGFydFBvc3NxAH4ADMvT7L90AAVCbG9ja3NxAH4ADB75LzZ0AAVSaWdodHNxAH4ADObBo1t0AAJlcXNxAH4ADFoemSx0AA9wcm9kdWN0SXRlcmF0b3JzcQB+AAz+eouNdAAFcmlnaHRzcQB+AAyXRFAOdAACIyNzcQB+AAzMnDtwdAAIZmluYWxpemVzcQB+AAwMZeNXdAAOcHJvZHVjdEVsZW1lbnRzcQB+AAzsJlyFdAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgCTeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnPHERMhaZzcJAIAAUIABWZsYWdzeHABdAAPc3RyZWFtcy5HYW1lRGVmdXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAFVHJhaXR1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAE3hzYnRpLlNhZmVMYXp5JEltcGxQAi6Tl5dAPwIAA1oACGJpdG1hcCQwTAACX3R0ABJMamF2YS9sYW5nL09iamVjdDtMAARldmFsdAARTHNjYWxhL0Z1bmN0aW9uMDt4cgAWeHNidGkuYXBpLkFic3RyYWN0TGF6edN3tQFfu+egAgAAeHAAcHNyACB4c2J0aS5TYWZlTGF6eSQkYW5vbmZ1biRzdHJpY3QkMQAAAAAAAAAAAgABTAAHdmFsdWUkMXEAfgCseHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgCrAHBzcQB+ALBzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4Ak0wACWluaGVyaXRlZHEAfgCTTAAHcGFyZW50c3EAfgCTeHEAfgC0c3EAfgCrAHBzcQB+ALB1cQB+AI4AAAAAc3EAfgCrAHBzcQB+ALB1cQB+AI4AAAAAc3EAfgCrAHBzcQB+ALB1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAAAnNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+ALN0AAZPYmplY3RzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+ALNzcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAANzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQABGphdmFzcQB+ANB0AARsYW5nc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+ANFzcQB+AMR0AANBbnlzcQB+AMhzcQB+AMt1cQB+AM4AAAACc3EAfgDQdAAFc2NhbGFxAH4A13VyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAABc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAB3N0cmVhbXNzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAVbhT3todXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAMUQ6XElkZWFQcm9qZWN0c1xzdHJlYW1zXHRhcmdldFxzY2FsYS0yLjExXGNsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABQA1bY55uvfWItTDmg6A1xWFFHgBQ==
streams.Solver -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHDxyJH3AHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAARXNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cHzfVeF0AARkb3duc3EAfgAMLlnRBXQABm5vdGlmeXNxAH4ADDA7eH10AAd1bmFwcGx5c3EAfgAMxuRtaXQAB2N1cnJpZWRzcQB+AAy6FS3DdAABeHNxAH4ADH42vf90AAR3YWl0c3EAfgAMCk1ZJ3QAAmIyc3EAfgAMLJsEz3QADmxlZ2FsTmVpZ2hib3Jzc3EAfgAMVUu52HQADmNvcHkkZGVmYXVsdCQyc3EAfgAMu3JSPnQADSRhc0luc3RhbmNlT2ZzcQB+AAzRinD2dAACZHlzcQB+AAyM1ql+dAAQbmV3TmVpZ2hib3JzT25seXNxAH4ADNMPu/B0AAxwcm9kdWN0QXJpdHlzcQB+AAyCbZQMdAAOcGF0aHNGcm9tU3RhcnRzcQB+AAywsncjdAAGZXF1YWxzc3EAfgAMXjhZj3QAAXlzcQB+AAy5bHZRdAACdXBzcQB+AAwIL7V4dAAMYXNJbnN0YW5jZU9mc3EAfgAMGbF0CHQACW5laWdoYm9yc3NxAH4ADKgPIUZ0AAxzeW5jaHJvbml6ZWRzcQB+AAzZS3wjdAAEbGVmdHNxAH4ADJwQPop0AA0kaXNJbnN0YW5jZU9mc3EAfgAMlJg5jnQABnR1cGxlZHNxAH4ADAvwJ1l0AARnb2Fsc3EAfgAMRrmpsHQAAmIxc3EAfgAMmjQNlHQACGNhbkVxdWFsc3EAfgAMkygfDXQADXByb2R1Y3RQcmVmaXhzcQB+AAzszmjDdAAJbm90aWZ5QWxsc3EAfgAMPVGEsnQAC3JlYWRSZXNvbHZlc3EAfgAMZH3qb3QADGlzSW5zdGFuY2VPZnNxAH4ADECjDB90AAhzb2x1dGlvbnNxAH4ADJpPrJ10AAY8aW5pdD5zcQB+AAwxhcUQdAAETW92ZXNxAH4ADCKUTbd0AAVhcHBseXNxAH4ADIisaKt0AAI9PXNxAH4ADFSOxGF0AAREb3duc3EAfgAMLkUX+XQABExlZnRzcQB+AAz3sqU3dAAFY2xvbmVzcQB+AAyVt4hRdAAHdGVycmFpbnNxAH4ADH2STmh0AAtwYXRoc1RvR29hbHNxAH4ADLcAgoF0AARmcm9tc3EAfgAMA9KQxnQACGVuZEJsb2Nrc3EAfgAMxUbQvHQABiRpbml0JHNxAH4ADOM7ptV0AAdpc0xlZ2Fsc3EAfgAM+SXN2HQACnN0YXJ0QmxvY2tzcQB+AAzpjdGgdAAKaXNTdGFuZGluZ3NxAH4ADE+d59t0AAJVcHNxAH4ADCJvpa90AARjb3B5c3EAfgAMZo/vOXQABGRvbmVzcQB+AAzP9FX6dAAGU29sdmVyc3EAfgAMiY3iH3QACHRvU3RyaW5nc3EAfgAMt9iswHQAA1Bvc3NxAH4ADAbWzFh0AAIhPXNxAH4ADEJUnEB0AAhnZXRDbGFzc3NxAH4ADF19ICh0AA5jb3B5JGRlZmF1bHQkMXNxAH4ADH+PYWx0AAJkeHNxAH4ADAjpHWR0ABRuZWlnaGJvcnNXaXRoSGlzdG9yeXNxAH4ADNaHNVR0AAdUZXJyYWluc3EAfgAMuOjMgnQAAm5lc3EAfgAMTQ+6P3QACHN0YXJ0UG9zc3EAfgAM3q4F43QABUJsb2Nrc3EAfgAM1Kxd7HQABVJpZ2h0c3EAfgAML+5hU3QAAmVxc3EAfgAM92feF3QAD3Byb2R1Y3RJdGVyYXRvcnNxAH4ADJeJpzF0AAVyaWdodHNxAH4ADG0cw3J0AAIjI3NxAH4ADF7Q56t0AAhmaW5hbGl6ZXNxAH4ADDVCxdl0AA5wcm9kdWN0RWxlbWVudHNxAH4ADKwgQO10AAhoYXNoQ29kZXNyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAAFzcgATeHNidGkuYXBpLkNsYXNzTGlrZYM0HKHfsJdsAgAETAAOZGVmaW5pdGlvblR5cGV0ABpMeHNidGkvYXBpL0RlZmluaXRpb25UeXBlO1sAEHNhdmVkQW5ub3RhdGlvbnN0ABNbTGphdmEvbGFuZy9TdHJpbmc7TAAIc2VsZlR5cGV0ABBMeHNidGkvYXBpL0xhenk7TAAJc3RydWN0dXJlcQB+AKF4cgAheHNidGkuYXBpLlBhcmFtZXRlcml6ZWREZWZpbml0aW9u+RFusdVQPOICAAFbAA50eXBlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1R5cGVQYXJhbWV0ZXI7eHIAFHhzYnRpLmFwaS5EZWZpbml0aW9uhyob6HFC40YCAARMAAZhY2Nlc3N0ABJMeHNidGkvYXBpL0FjY2VzcztbAAthbm5vdGF0aW9uc3QAF1tMeHNidGkvYXBpL0Fubm90YXRpb247TAAJbW9kaWZpZXJzdAAVTHhzYnRpL2FwaS9Nb2RpZmllcnM7TAAEbmFtZXEAfgANeHBzcgAQeHNidGkuYXBpLlB1YmxpY7pYPa5sLWBCAgAAeHIAEHhzYnRpLmFwaS5BY2Nlc3PdYpr4HWMxSAIAAHhwdXIAF1tMeHNidGkuYXBpLkFubm90YXRpb24765frGRD2jUgCAAB4cAAAAABzcgATeHNidGkuYXBpLk1vZGlmaWVyc8cREyFpnNwkAgABQgAFZmxhZ3N4cAF0AA5zdHJlYW1zLlNvbHZlcnVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABVRyYWl0dXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyABN4c2J0aS5TYWZlTGF6eSRJbXBsUAIuk5eXQD8CAANaAAhiaXRtYXAkMEwAAl90dAASTGphdmEvbGFuZy9PYmplY3Q7TAAEZXZhbHQAEUxzY2FsYS9GdW5jdGlvbjA7eHIAFnhzYnRpLmFwaS5BYnN0cmFjdExhennTd7UBX7vnoAIAAHhwAHBzcgAgeHNidGkuU2FmZUxhenkkJGFub25mdW4kc3RyaWN0JDEAAAAAAAAAAAIAAUwAB3ZhbHVlJDFxAH4Aunhwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AuQBwc3EAfgC+c3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AKFMAAlpbmhlcml0ZWRxAH4AoUwAB3BhcmVudHNxAH4AoXhxAH4AwnNxAH4AuQBwc3EAfgC+dXEAfgCcAAAAAHNxAH4AuQBwc3EAfgC+dXEAfgCcAAAAAHNxAH4AuQBwc3EAfgC+dXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAANzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgDBdAAHR2FtZURlZnNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AwXNyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAAnNyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAHc3RyZWFtc3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgDfc3EAfgDSdAAGT2JqZWN0c3EAfgDWc3EAfgDZdXEAfgDcAAAAA3NxAH4A3nQABGphdmFzcQB+AN50AARsYW5ncQB+AONzcQB+ANJ0AANBbnlzcQB+ANZzcQB+ANl1cQB+ANwAAAACc3EAfgDedAAFc2NhbGFxAH4A43VyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAABc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAB3N0cmVhbXNzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAVbhT3todXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAMUQ6XElkZWFQcm9qZWN0c1xzdHJlYW1zXHRhcmdldFxzY2FsYS0yLjExXGNsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABRJXY03SsrevcxfTq73fAt7okR79g==
streams.StringParserTerrain -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHBb0z8pAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAARHNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cKDN+7x0AAt2YWxpZENvbHVtbnNxAH4ADLVGtDN0AARkb3duc3EAfgAMX+sB43QABm5vdGlmeXNxAH4ADP3BfkV0AAd1bmFwcGx5c3EAfgAMtDxbCnQAB2N1cnJpZWRzcQB+AAxwigVhdAABeHNxAH4ADD4RsD50AAR3YWl0c3EAfgAM1fqh/XQAAmIyc3EAfgAM/lyHInQADmxlZ2FsTmVpZ2hib3Jzc3EAfgAM82a11XQADmNvcHkkZGVmYXVsdCQyc3EAfgAMj1Zw0nQADSRhc0luc3RhbmNlT2ZzcQB+AAzaQda/dAACZHlzcQB+AAzQRxCqdAAMcHJvZHVjdEFyaXR5c3EAfgAMJ37PvHQABmVxdWFsc3NxAH4ADPivpT10AAF5c3EAfgAMJgldiHQAAnVwc3EAfgAMB+5/cXQADGFzSW5zdGFuY2VPZnNxAH4ADMIZrB10AAluZWlnaGJvcnNzcQB+AAwvbMPFdAANdmFsaWRQb3NpdGlvbnNxAH4ADN5gxRV0AAZ2ZWN0b3JzcQB+AAwJMgD9dAAMc3luY2hyb25pemVkc3EAfgAMC5WSNHQABGxlZnRzcQB+AAwacGoMdAANJGlzSW5zdGFuY2VPZnNxAH4ADNnuoud0AAZ0dXBsZWRzcQB+AAyinUysdAAEZ29hbHNxAH4ADHWS+OR0AAJiMXNxAH4ADCgazIF0AAhjYW5FcXVhbHNxAH4ADElkynN0AA90ZXJyYWluRnVuY3Rpb25zcQB+AAwXvDdDdAANcHJvZHVjdFByZWZpeHNxAH4ADF0PAiZ0AAlub3RpZnlBbGxzcQB+AAxrG717dAALcmVhZFJlc29sdmVzcQB+AAw0E9N9dAAMaXNJbnN0YW5jZU9mc3EAfgAMCmV7b3QABjxpbml0PnNxAH4ADB3/j990AARNb3Zlc3EAfgAMtmxienQABWFwcGx5c3EAfgAMI1Zzy3QAAj09c3EAfgAM/S/n0HQABERvd25zcQB+AAy2hB4wdAAETGVmdHNxAH4ADOFvBsZ0AAVjbG9uZXNxAH4ADBKk2rJ0AAd0ZXJyYWluc3EAfgAMSLQoHHQACGVuZEJsb2Nrc3EAfgAMytPWT3QABiRpbml0JHNxAH4ADIo40C90AAdpc0xlZ2Fsc3EAfgAMWUnc8nQACnN0YXJ0QmxvY2tzcQB+AAwSeOs6dAAKaXNTdGFuZGluZ3NxAH4ADAG8K3J0AAJVcHNxAH4ADEQvOsB0ABNTdHJpbmdQYXJzZXJUZXJyYWluc3EAfgAMm7AkuHQABGNvcHlzcQB+AAwDrcimdAAIdG9TdHJpbmdzcQB+AAxEw1HPdAAIZmluZENoYXJzcQB+AAz+M+Z9dAADUG9zc3EAfgAMp0Qi7HQAAiE9c3EAfgAMhRYaq3QACGdldENsYXNzc3EAfgAMH7oqJnQADmNvcHkkZGVmYXVsdCQxc3EAfgAM+MKaTXQAAmR4c3EAfgAMHC/FsHQAB1RlcnJhaW5zcQB+AAwqk9WxdAACbmVzcQB+AAzLPzXbdAAIc3RhcnRQb3NzcQB+AAzNtOT2dAAFQmxvY2tzcQB+AAwt2cSydAAFUmlnaHRzcQB+AAwvrra9dAACZXFzcQB+AAylqgL0dAAPcHJvZHVjdEl0ZXJhdG9yc3EAfgAM2+03c3QABXJpZ2h0c3EAfgAMjBvDtHQAAiMjc3EAfgAMX95RgHQACGZpbmFsaXplc3EAfgAM1MR2EHQADnByb2R1Y3RFbGVtZW50c3EAfgAMpjBVrHQACGhhc2hDb2Rlc3EAfgAMFQ3kwXQABWxldmVsc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4An3hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzxxETIWmc3CQCAAFCAAVmbGFnc3hwAXQAG3N0cmVhbXMuU3RyaW5nUGFyc2VyVGVycmFpbnVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABVRyYWl0dXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyABN4c2J0aS5TYWZlTGF6eSRJbXBsUAIuk5eXQD8CAANaAAhiaXRtYXAkMEwAAl90dAASTGphdmEvbGFuZy9PYmplY3Q7TAAEZXZhbHQAEUxzY2FsYS9GdW5jdGlvbjA7eHIAFnhzYnRpLmFwaS5BYnN0cmFjdExhennTd7UBX7vnoAIAAHhwAHBzcgAgeHNidGkuU2FmZUxhenkkJGFub25mdW4kc3RyaWN0JDEAAAAAAAAAAAIAAUwAB3ZhbHVlJDFxAH4AuHhwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AtwBwc3EAfgC8c3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AJ9MAAlpbmhlcml0ZWRxAH4An0wAB3BhcmVudHNxAH4An3hxAH4AwHNxAH4AtwBwc3EAfgC8dXEAfgCaAAAAAHNxAH4AtwBwc3EAfgC8dXEAfgCaAAAAAHNxAH4AtwBwc3EAfgC8dXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAANzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgC/dAAHR2FtZURlZnNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4Av3NyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAAnNyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAHc3RyZWFtc3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgDdc3EAfgDQdAAGT2JqZWN0c3EAfgDUc3EAfgDXdXEAfgDaAAAAA3NxAH4A3HQABGphdmFzcQB+ANx0AARsYW5ncQB+AOFzcQB+ANB0AANBbnlzcQB+ANRzcQB+ANd1cQB+ANoAAAACc3EAfgDcdAAFc2NhbGFxAH4A4XVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAABc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAB3N0cmVhbXNzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAVbhVKN4dXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAMUQ6XElkZWFQcm9qZWN0c1xzdHJlYW1zXHRhcmdldFxzY2FsYS0yLjExXGNsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABTovuxzNuhp+yb8+yS+FC01VRFpHA==
source infos:
1 items
D:\IdeaProjects\streams\src\test\scala\streams\BloxorzSuite.scala -> 
AAAAAAAAAAA=
compilations:
2 items
0 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABVuFPjHN1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQANkQ6XElkZWFQcm9qZWN0c1xzdHJlYW1zXHRhcmdldFxzY2FsYS0yLjExXHRlc3QtY2xhc3Nlc3QAAS8=
1 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABVuFUt6N1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQANkQ6XElkZWFQcm9qZWN0c1xzdHJlYW1zXHRhcmdldFxzY2FsYS0yLjExXHRlc3QtY2xhc3Nlc3QAAS8=
